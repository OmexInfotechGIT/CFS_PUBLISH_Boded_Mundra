@model CFS.Models.trnReeferPluginOut
@{
    ViewBag.gblBlnView = CFS.Com.ClsCommon.getaccesspage(CFS.Com.ClsCommon.Controller(), CFS.Com.ClsCommon.AccessType.View);
    ViewBag.gblBlnEdit = CFS.Com.ClsCommon.getaccesspage(CFS.Com.ClsCommon.Controller(), CFS.Com.ClsCommon.AccessType.Edit);
    ViewBag.gblBlnAdd = CFS.Com.ClsCommon.getaccesspage(CFS.Com.ClsCommon.Controller(), CFS.Com.ClsCommon.AccessType.Add);
    ViewBag.gblBlnDelete = CFS.Com.ClsCommon.getaccesspage(CFS.Com.ClsCommon.Controller(), CFS.Com.ClsCommon.AccessType.Delete);
    ViewBag.gblBlnApprove = CFS.Com.ClsCommon.getaccesspage(CFS.Com.ClsCommon.Controller(), CFS.Com.ClsCommon.AccessType.Approve);
    ViewBag.gblBlnUnapprove = CFS.Com.ClsCommon.getaccesspage(CFS.Com.ClsCommon.Controller(), CFS.Com.ClsCommon.AccessType.Unapprove);
    var IsEdit = false;
    if (Model.doaction == "edit")
    {
        IsEdit = true;
        ViewBag.Title = "Update Reefer Plug in Plug Out";
        if (!ViewBag.gblBlnEdit && !ViewBag.gblBlnAdd)
        {
            Response.Redirect(CFS.Com.ClsCommon.GetRootPath() + "Error/unauthorize/");
        }
    }
    else
    {
        ViewBag.Title = "Add New Reefer Plug in Plug Out";
        if (!ViewBag.gblBlnAdd)
        {
            Response.Redirect(CFS.Com.ClsCommon.GetRootPath() + "Error/unauthorize/");
        }
    }
}


<!-- Main content -->
<style>
    table th, table td {
        padding: 10px;
    }
</style>
@using (Html.BeginForm("Action", "trnReeferPluginOut", FormMethod.Post, new { @id = "frmpost", @name = "frmpost" }))
{
    <section class="content">
        <div class="row">
            <div class="box">
                <div class="box-body">
                    @if (Model.doaction == "edit" && !string.IsNullOrEmpty(Model.ReeferWONo))
                    {
                        <div class="pull-left">
                            <div style="display: inline-flex">
                                <span class="badge bg-light-blue" style="font-size:15px;">Reefer WO No : @CFS.Com.ClsCommon.AddhtmlSpace(3)@Model.ContPrefix@Model.ReeferWONo</span>
                                <span class="badge bg-light-blue" style="font-size:15px;">Reefer Date And Time : @CFS.Com.ClsCommon.AddhtmlSpace(3)@Model.ReeferDateTime</span>
                                <span class="badge bg-light-blue" style="font-size:15px;">User : @CFS.Com.ClsCommon.AddhtmlSpace(3)@Model.UseName</span>
                            </div>
                        </div>
                    }
                    <div class="pull-right">
                        <div style="display: inline-flex">
                            <a href="@Url.Action("Index","trnReeferPluginOut", new {pg = Request.Params["pg"], search = Request.Params["search"] })" class="btn btn-primary btn-sm" style="color: #fff" data-toggle="tooltip" title="Back to listing"><i class="fa fa-arrow-left"></i></a>
                        </div>
                    </div>
                    <div class="col-md-12"></div>
                    <div class="col-md-5">
                        <div class="form-group">
                            @Html.LabelFor(Model => Model.ContNo)<span class="text-red">*</span>
                            @Html.TextBoxFor(Model => Model.ContNo, new { @id = "ContNo", @name = "ContNo", @class = "form-control", @placeholder = "Enter Cont No" })
                            @Html.HiddenFor(Model => Model.ContNoID, new { @id = "ContNoID", @name = "ContNoID" })
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <br />
                            <button type="button" class="btn btn-primary" onclick="SearchwithContNo()">Search</button>
                            @* <a href="@Url.Action("index",  "trnReeferPluginOut")" class="btn btn-danger">Clear</a>*@
                            @if (!Model.IsSearch)
                            {
                                <button type="button" class="btn btn-danger" id="ClearContNo" onclick="return ClearContNo()"> Clear</button>
                            }
                        </div>
                    </div>
                    @if (Model.IsSearch)
                    {

                        @Html.HiddenFor(Model => Model.pagger.Search)
                        @Html.HiddenFor(Model => Model.doaction)
                        @Html.HiddenFor(Model => Model.IsSearch)
                        @Html.HiddenFor(Model => Model.IsFinished)
                        @Html.HiddenFor(Model => Model.ExportContNoID)
                        @Html.HiddenFor(Model => Model.DomesticContNoID)
                        @Html.HiddenFor(Model => Model.TypeOfCont)
                        <input type="hidden" id="trnReeferPluginOutID" name="trnReeferPluginOutID" value="@Model.trnReeferPluginOutID" />
                        <input type="hidden" id="ContNo" name="ContNo" value="@Model.ContNo" />
                        <input type="hidden" id="ContNoID" name="ContNoID" value="@Model.ContNoID" />
                        <div class="col-md-12" style="border-bottom:1px solid #cdcdcd;margin-bottom: 5px;"></div>
                        <div class="col-md-3">
                            @Html.LabelFor(Model => Model.Size) : <span>@Model.Size</span>
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(Model => Model.ContType) : <span>@Model.ContType</span>
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(Model => Model.GateinDate) : <span id="txtGateInDate">@Model.GateinDate</span>
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(Model => Model.GateOutDate) : <span>@Model.GateOutDate</span>
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(Model => Model.DeliveryMode) : <span>@Model.DeliveryMode</span>
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(Model => Model.Agent) : <span>@Model.Agent</span>
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(Model => Model.Line) : <span>@Model.Line</span>
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(Model => Model.TransactionType) : <span>@Model.TransactionType</span>
                        </div>
                        <div class="col-md-12" style="border-bottom:1px solid #cdcdcd;margin-bottom: 5px;"></div>
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(Model => Model.Remarks, new { @for = "Remarks" }) @Html.ValidationMessageFor(Model => Model.Remarks, String.Empty, new { @class = "help-inline text-red" })
                                @Html.TextBoxFor(Model => Model.Remarks, new { @id = "Remarks", @name = "Remarks", @class = "form-control", @placeholder = "Enter Remarks" })
                            </div>
                        </div>
                        <div class="col-md-2 pull-right">
                            <div class="form-group">
                                <br />
                                @if (!IsEdit)
                                {
                                    <button type="submit" class="btn btn-primary" name="SaveCon" id="SaveCon" value="Continue" onclick="return PlugInValidation(1)">Continue</button>
                                    <a href="@Url.Action("index", "trnReeferPluginOut")" class="btn btn-danger">Cancel</a>
                                }

                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        @if (Model.IsSearch)
        {
            @Html.Partial("_DOCDetailsGrid")
        }
        @if (IsEdit)
        {
            <div class="row">
                <div class="box">
                    <div class="box-header with-border">
                        <h4><b>Plug in/Plug out Details </b></h4>
                    </div>
                    <div class="box-body">
                        <div id="PlugInDetails">
                            @using (Html.BeginForm("Action", "trnReeferPluginOutDetails", FormMethod.Post, new { @id = "frmpost", @name = "frmpost" }))
                            {
                                @Html.HiddenFor(Model => Model.pagger.Search)
                                @Html.HiddenFor(Model => Model.doaction)
                                @Html.HiddenFor(Model => Model.page)
                                @Html.HiddenFor(Model => Model.filter)
                                @Html.HiddenFor(Model => Model.IsSearch)
                                @Html.HiddenFor(Model => Model.trnReeferPluginOutID, new { @id = "trnReeferPluginOutID", @name = "@trnReeferPluginOutID" })
                                @Html.HiddenFor(Model => Model.trnReeferPluginOutDetails.trnReeferPluginOutDetailsID, new { @id = "trnReeferPluginOutDetailsID", @name = "@trnReeferPluginOutDetailsID" })

                                <input type="hidden" id="trnReeferPluginOutID" name="trnReeferPluginOutID" value="@Model.trnReeferPluginOutID" />
                                <input type="hidden" id="ContNo" name="ContNo" value="@Model.ContNo" />
                                <input type="hidden" id="ContNoID" name="ContNoID" value="@Model.ContNoID" />
                                <input type="hidden" id="hdnEmptyPoweroffdateCount" name="hdnEmptyPoweroffdateCount" value="" />
                                <input type="hidden" id="hdnTempPowerOffDate" name="hdnTempPowerOffDate" />

                                <div class="col-md-2">
                                    <div class="form-group">
                                        @Html.LabelFor(Model => Model.trnReeferPluginOutDetails.Temp, new { @for = "Temp" }) <span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.trnReeferPluginOutDetails.Temp, String.Empty, new { @id = "spn_Temp", @class = "help-inline text-red" })
                                        @Html.TextBoxFor(Model => Model.trnReeferPluginOutDetails.Temp, new { @id = "Temp", @name = "Temp", @class = "form-control", @maxlength = "6", @placeholder = "Enter Temp" })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        @Html.LabelFor(Model => Model.trnReeferPluginOutDetails.PowerOnDate, new { @for = "PowerOnDate" }) <span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.trnReeferPluginOutDetails.PowerOnDate, String.Empty, new { @id = "spn_PowerOnDate", @class = "help-inline text-red" })
                                        <div class="input-group">
                                            <input class="form-control DateTimePicker" id="PowerOnDate" name="trnReeferPluginOutDetails.PowerOnDate" placeholder="Enter Power On Date" type="text" value="@CFS.Com.ClsCommon.GetCurrentDateTime().ToString(CFS.Com.ClsCommon.CSProjectDateTimeFormat)">
                                            <span class="input-group-addon" onclick="getElementById('PowerOnDate').focus()"><i class="fa fa-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div id="dvPoweroffdate" class="form-group">
                                        @Html.LabelFor(Model => Model.trnReeferPluginOutDetails.Poweroffdate, new { @for = "Poweroffdate" }) <span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.trnReeferPluginOutDetails.Poweroffdate, String.Empty, new { @id = "spn_Poweroffdate", @class = "help-inline text-red" })
                                        <div class="input-group">
                                            @Html.TextBoxFor(Model => Model.trnReeferPluginOutDetails.Poweroffdate, new { @id = "Poweroffdate", @name = "Poweroffdate", @class = "form-control DateTimePicker", @placeholder = "Enter Power Off Date"})
                                            <span class="input-group-addon" onclick="getElementById('Poweroffdate').focus()"><i class="fa fa-calendar"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <br />
                                        <button type="button" class="btn btn-primary" id="SaveDoc" onclick="return PluginOutValidation(2)">Add</button>
                                        <button type="button" onclick="return ClearPluginOutDetails()" class="btn btn-danger">Clear</button>
                                    </div>
                                </div>
                                <div id="addLabel"></div>
                            }
                        </div>
                        <div class="col-md-12">
                            <table id="example2" style="white-space: nowrap" class="table-bordered table-hover">
                                <thead>
                                    <tr>
                                        <th>Power On Date</th>
                                        <th>Power off date</th>
                                        <th>Temp</th>
                                        <th>Invoice No</th>
                                        <th>Invoice Date</th>
                                        <th>No of days</th>
                                        <th>Power On Date Entered by</th>
                                        <th>Power Off Date Entered by</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody id="tblContainer"></tbody>
                            </table>
                        </div>
                    </div>

                    <br /><br />
                    <div class="box-body">
                        <div id="dvdMonitoringData">
                            @using (Html.BeginForm("Action", "trnReeferPluginOutMonitor", FormMethod.Post, new { @id = "frmpost", @name = "frmpost" }))
                            {

                                @Html.HiddenFor(Model => Model.pagger.Search)
                                @Html.HiddenFor(Model => Model.doaction)
                                @Html.HiddenFor(Model => Model.IsSearch)
                                @Html.HiddenFor(Model => Model.IsFinished)
                                @Html.HiddenFor(Model => Model.trnReeferPluginOutMonitor.trnReeferPluginOutMonitorID, new { @id = "trnReeferPluginOutMonitorID", @name = "@trnReeferPluginOutMonitorID" })
                                <input type="hidden" id="trnReeferPluginOutID" name="trnReeferPluginOutID" value="@Model.trnReeferPluginOutID" />
                                <input type="hidden" id="ContNo" name="ContNo" value="@Model.ContNo" />
                                <input type="hidden" id="ContNoID" name="ContNoID" value="@Model.ContNoID" />

                                <div class="col-md-2">
                                    <div class="form-group">
                                        @Html.LabelFor(Model => Model.trnReeferPluginOutMonitor.Temperature, new { @for = "Temperature" }) <span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.trnReeferPluginOutMonitor.Temperature, String.Empty, new { @id = "spn_Temperature", @class = "help-inline text-red" })
                                        @Html.TextBoxFor(Model => Model.trnReeferPluginOutMonitor.Temperature, new { @id = "Temperature", @name = "Temperature", @class = "form-control", @maxlength = "6", @placeholder = "Enter Temperature" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Html.LabelFor(Model => Model.trnReeferPluginOutMonitor.Remarks, new { @for = "Remarks_Monitor" }) @Html.ValidationMessageFor(Model => Model.trnReeferPluginOutMonitor.Remarks, String.Empty, new { @id = "spn_Remarks", @class = "help-inline text-red" })
                                        @Html.TextBoxFor(Model => Model.trnReeferPluginOutMonitor.Remarks, new { @id = "Remarks_Monitor", @name = "Remarks_Monitor", @class = "form-control", @placeholder = "Enter Remarks" })
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <br />
                                        <button type="button" class="btn btn-primary" id="SaveDoc" onclick="return PluginOutValidationMonitor()">Add</button>
                                        <button type="button" onclick="return ClearPluginOutMonitor()" class="btn btn-danger">Clear</button>
                                    </div>
                                </div>
                                <div id="addLabelMonitor"></div>
                            }
                        </div>
                        <div class="col-md-12">
                            <table id="example2" style="white-space: nowrap" class="table-bordered table-hover">
                                <thead>
                                    <tr>
                                        <th>Monitor Date</th>
                                        <th>Temperature</th>
                                        <th>Remarks</th>
                                        <th>Monitored By</th>
                                        <th>Action</th>

                                    </tr>
                                </thead>
                                <tbody id="tblMonitor"></tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="pull-right">
                        <button type="submit" class="btn btn-primary" name="SaveCon" id="SaveCon" value="Submit" onclick="return PlugInValidation()">Submit</button>
                        <a href="@Url.Action("index", "trnReeferPluginOut", new {pg = Request.Params["pg"], search = Request.Params["search"] })" class="btn btn-danger">Cancel</a>
                    </div>
                </div>
            </div>
        }

    </section>
}
<script>
    var doaction = '@Model.doaction';
</script>
<script>
    var VCNDeatails = '@Model.HtmlVCNDeatails';
    var IsSearch = '@Model.IsSearch.ToString().ToLower()';

    function changestepValue(tabNo) {
        $("#DocumentTab").val(tabNo);
        if (tabNo != "1") {
            if (tabNo == "5") {
                $("#IsChangeStep").val(2);
            }
        }
        //$("frmpost").submit();
    }
</script>
@if (((Model != null && Model.doaction.ToLower() == "edit") || Model.trnReeferPluginOutID > 0))
{
    <script>
        $(".isDisplayOnlyinEdit").show();
    </script>
}
else
{
    <script>
        $(".isDisplayOnlyinEdit").hide();
    </script>
}
<script src="@CFS.Com.ClsCommon.GetCacheVersion("FormJs/trnReeferPluginOut.js")"></script>
