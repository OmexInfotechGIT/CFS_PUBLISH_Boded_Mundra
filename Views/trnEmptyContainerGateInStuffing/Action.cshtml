@model CFS.Models.trnEmptyContainerGateInStuffing

@{
    ViewBag.gblBlnView = CFS.Com.ClsCommon.getaccesspage(CFS.Com.ClsCommon.Controller(), CFS.Com.ClsCommon.AccessType.View);
    ViewBag.gblBlnEdit = CFS.Com.ClsCommon.getaccesspage(CFS.Com.ClsCommon.Controller(), CFS.Com.ClsCommon.AccessType.Edit);
    ViewBag.gblBlnAdd = CFS.Com.ClsCommon.getaccesspage(CFS.Com.ClsCommon.Controller(), CFS.Com.ClsCommon.AccessType.Add);
    ViewBag.gblBlnDelete = CFS.Com.ClsCommon.getaccesspage(CFS.Com.ClsCommon.Controller(), CFS.Com.ClsCommon.AccessType.Delete);
    if (Model.doaction == "edit")
    {
        ViewBag.Title = "Update Empty Container Gate In Stuffing";
        if (!ViewBag.gblBlnEdit)
        {
            Response.Redirect(CFS.Com.ClsCommon.GetRootPath() + "Error/unauthorize/");
        }
    }
    else
    {
        ViewBag.Title = "Add New Empty Container Gate In Stuffing";
        if (!ViewBag.gblBlnEdit)
        {
            Response.Redirect(CFS.Com.ClsCommon.GetRootPath() + "Error/unauthorize/");
        }
    }
}


<!-- Main content -->
<section class="content">

    @using (Html.BeginForm("Action", "trnEmptyContainerGateInStuffing", FormMethod.Post))
    {
        @Html.HiddenFor(Model => Model.pagger.Search)
        @Html.HiddenFor(Model => Model.doaction)
        <div class="row" id="step-1">
            <div class="col-xs-12">
                <div class="box">
                    <div class="box-header with-border" style="cursor:pointer" data-widget="collapse">
                        <h4>
                            <b>
                                Empty Container Gate In For Stuffing Details ?
                            </b>
                        </h4>
                    </div>
                    <div class="box-body" id="step-1-body">

                        <div class="row">
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(Model => Model.ContInPassNo, new { @for = "txtContInPassNo" })<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.ContInPassNo, String.Empty, new { @class = "help-inline text-red" })
                                    @Html.TextBoxFor(Model => Model.ContInPassNo, new { @id = "txtContInPassNo", @name = "txtContInPassNo", @class = "form-control", @placeholder = "Enter Cont In Pass No" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(Model => Model.ContInPassDate, new { @for = "ContInPassDate" })<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.ContInPassDate, String.Empty, new { @class = "help-inline text-red" })
                                    <div class="input-group">
                                        @Html.TextBoxFor(Model => Model.ContInPassDate, new { @id = "ContInPassDate", @name = "ContInPassDate", @class = "form-control DatePicker", @placeholder = "Enter Cont In Pass Date" })
                                        <span class="input-group-addon" onclick="getElementById('ContInPassDate').focus()"><i class="fa fa-calendar"></i></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(Model => Model.ContInConfirmationDate, new { @for = "ContInConfirmationDate" })<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.ContInConfirmationDate, String.Empty, new { @class = "help-inline text-red" })
                                    <div class="input-group">
                                        @Html.TextBoxFor(Model => Model.ContInConfirmationDate, new { @id = "ContInConfirmationDate", @name = "ContInConfirmationDate", @class = "form-control DatePicker", @placeholder = "Enter Cont In Confirmation Date" })
                                        <span class="input-group-addon" onclick="getElementById('ContInConfirmationDate').focus()"><i class="fa fa-calendar"></i></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(Model => Model.User, new { @for = "txtUser" })<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.User, String.Empty, new { @class = "help-inline text-red" })
                                    @Html.TextBoxFor(Model => Model.User, new { @id = "txtUser", @name = "txtUser", @class = "form-control", @placeholder = "Enter User" })
                                </div>
                            </div>
                        </div>

                        <hr />

                        <div class="row">
                            <div class="col-md-3">
                                <div class="form-inline">
                                    @Html.LabelFor(Model => Model.TrailerNo, new { @for = "txtTrailerNo" })<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.TrailerNo, String.Empty, new { @class = "help-inline text-red" })
                                    <br />
                                    @Html.TextBoxFor(Model => Model.TrailerNo, new { @id = "txtTrailerNo", @name = "txtTrailerNo", @class = "form-control", @placeholder = "Enter Trailer No" })
                                    <button type="submit" class="btn btn-primary">Go</button>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-inline">
                                    @Html.LabelFor(Model => Model.TrailerNo, new { @for = "txtTrailerNo" })<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.TrailerNo, String.Empty, new { @class = "help-inline text-red" })
                                    <br />
                                    @Html.TextBoxFor(Model => Model.TrailerNo, new { @id = "txtTrailerNo", @name = "txtTrailerNo", @class = "form-control", @placeholder = "Enter Trailer No" })
                                    <button type="submit" class="btn btn-primary">Go</button>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(Model => Model.User, new { @for = "txtUser" })<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.User, String.Empty, new { @class = "help-inline text-red" })
                                    @Html.TextBoxFor(Model => Model.User, new { @id = "txtUser", @name = "txtUser", @class = "form-control", @placeholder = "Enter User" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(Model => Model.LicNo, new { @for = "txtLicNo" })<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.LicNo, String.Empty, new { @class = "help-inline text-red" })
                                    @Html.TextBoxFor(Model => Model.LicNo, new { @id = "txtLicNo", @name = "txtLicNo", @class = "form-control", @placeholder = "Enter Lic. No" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(Model => Model.DriverName, new { @for = "txtDriverName" })<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.DriverName, String.Empty, new { @class = "help-inline text-red" })
                                    @Html.TextBoxFor(Model => Model.DriverName, new { @id = "txtDriverName", @name = "txtDriverName", @class = "form-control", @placeholder = "Enter Driver Name" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(Model => Model.MobileNo, new { @for = "txtMobileNo" })<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.MobileNo, String.Empty, new { @class = "help-inline text-red" })
                                    @Html.TextBoxFor(Model => Model.MobileNo, new { @id = "txtMobileNo", @name = "txtMobileNo", @class = "form-control", @placeholder = "Enter Mobile No." })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(Model => Model.Address, new { @for = "txtAddress" })<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.Address, String.Empty, new { @class = "help-inline text-red" })
                                    @Html.TextBoxFor(Model => Model.Address, new { @id = "txtAddress", @name = "txtAddress", @class = "form-control", @placeholder = "Enter Address" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(Model => Model.FRBundlingStatus, new { @for = "txtFRBundlingStatus" })<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.FRBundlingStatus, String.Empty, new { @class = "help-inline text-red" })
                                    @Html.TextBoxFor(Model => Model.FRBundlingStatus, new { @id = "txtFRBundlingStatus", @name = "txtFRBundlingStatus", @class = "form-control", @placeholder = "Enter FR Bundling Status." })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(Model => Model.TruckExportStuffing, new { @for = "txtTruckExportStuffing" })<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.TruckExportStuffing, String.Empty, new { @class = "help-inline text-red" })
                                    @Html.TextBoxFor(Model => Model.TruckExportStuffing, new { @id = "txtTruckExportStuffing", @name = "txtTruckExportStuffing", @class = "form-control", @placeholder = "Enter Truck Export Stuffing" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(Model => Model.TruckWeighmentStatus, new { @for = "txtTruckWeighmentStatus" })<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.TruckWeighmentStatus, String.Empty, new { @class = "help-inline text-red" })
                                    @Html.TextBoxFor(Model => Model.TruckWeighmentStatus, new { @id = "txtTruckWeighmentStatus", @name = "txtTruckWeighmentStatus", @class = "form-control", @placeholder = "Enter Truck Weighment Status" })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-12">
                            <hr />
                        </div>

                        <div class="col-md-12" style="overflow:scroll">
                            <table id="tblexe1" style="white-space: nowrap;" class="table-bordered table-hover">
                                <thead>
                                    <tr>
                                        <th> Cont No. </th>
                                        <th> ISO Code </th>
                                        <th> WO ISO Code </th>
                                        <th> Size </th>
                                        <th> Type </th>
                                        <th> Enter Gross Weight </th>
                                        <th> Enter Container Tare Weight </th>
                                        <th> Net weight </th>
                                        <th> AGENT </th>
                                        <th> LINE </th>
                                        <th> Condition </th>
                                        <th> Condition Remarks </th>
                                        <th> CHA/Customer </th>
                                        <th> Forwarder </th>
                                        <th> Exporter </th>
                                        <th> Consoler </th>
                                        <th> From Location </th>
                                        <th> Remarks </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td> INPUT </td>
                                        <td> INPUT </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td> INPUT </td>
                                        <td> INPUT </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td> SELECT </td>
                                        <td> INPUT </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td>  </td>
                                    </tr>
                                    <tr>
                                        <td> INPUT </td>
                                        <td> INPUT </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td> INPUT </td>
                                        <td> INPUT </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td> SELECT </td>
                                        <td> INPUT </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td>  </td>
                                    </tr>
                                    <tr>
                                        <td> INPUT </td>
                                        <td> INPUT </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td> INPUT </td>
                                        <td> INPUT </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td> SELECT </td>
                                        <td> INPUT </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td>  </td>
                                    </tr>
                                    <tr>
                                        <td> INPUT </td>
                                        <td> INPUT </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td> INPUT </td>
                                        <td> INPUT </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td> SELECT </td>
                                        <td> INPUT </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td> DISPLAY </td>
                                        <td>  </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>


                        <div class="col-md-12">
                            <hr />
                        </div>


                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(Model => Model.Remarks, new { @for = "txtRemarks" })<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.Remarks, String.Empty, new { @class = "help-inline text-red" })
                                @Html.TextBoxFor(Model => Model.Remarks, new { @id = "txtRemarks", @name = "txtRemarks", @class = "form-control", @placeholder = "Enter Remarks" })
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(Model => Model.CancelRemarks, new { @for = "txtCancelRemarks" })<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.CancelRemarks, String.Empty, new { @class = "help-inline text-red" })
                                @Html.TextBoxFor(Model => Model.CancelRemarks, new { @id = "txtCancelRemarks", @name = "txtCancelRemarks", @class = "form-control", @placeholder = "Enter Cancel Remarks" })
                            </div>
                        </div>


                        <div class="col-md-12 box-footer">
                            <div class="pull-right">
                                <button type="submit" class="btn btn-primary">Submit</button>
                                <a href="@Url.Action("Index","trnEmptyContainerGateInStuffing")" class="btn btn-danger">Cancel</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

</section>
<script>
    var doaction = '@Model.doaction';
</script>
<script src="@CFS.Com.ClsCommon.GetCacheVersion("FormJs/trnEmptyContainerGateInStuffing.js")"></script>

