@model CFS.Models.trnCargoTruckOutwardCumGatepass
@using System.Globalization;
@{
    ViewBag.gblBlnView = CFS.Com.ClsCommon.getaccesspage(CFS.Com.ClsCommon.Controller(), CFS.Com.ClsCommon.AccessType.View);
    ViewBag.gblBlnEdit = CFS.Com.ClsCommon.getaccesspage(CFS.Com.ClsCommon.Controller(), CFS.Com.ClsCommon.AccessType.Edit);
    ViewBag.gblBlnAdd = CFS.Com.ClsCommon.getaccesspage(CFS.Com.ClsCommon.Controller(), CFS.Com.ClsCommon.AccessType.Add);
    ViewBag.gblBlnDelete = CFS.Com.ClsCommon.getaccesspage(CFS.Com.ClsCommon.Controller(), CFS.Com.ClsCommon.AccessType.Delete);
    bool IsEdit = false;
    if (Model.doaction == "edit")
    {
        IsEdit = true;
        ViewBag.Title = "Update Cargo Truck Outward Cum Gatepass";
        if (!ViewBag.gblBlnEdit && !ViewBag.gblBlnAdd)
        {
            Response.Redirect(CFS.Com.ClsCommon.GetRootPath() + "Error/unauthorize/");
        }
    }
    else
    {
        ViewBag.Title = "Add New Cargo Truck Outward Cum Gatepass";
        if (!ViewBag.gblBlnAdd)
        {
            Response.Redirect(CFS.Com.ClsCommon.GetRootPath() + "Error/unauthorize/");
        }
    }
}

<style>
    .ui-autocomplete {
        z-index: 10000;
    }

    table th, table td {
        padding: 10px;
    }
</style>
<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="col-xs-12">
            @using (Html.BeginForm("Action", "trnCargoTruckOutwardCumGatepass", FormMethod.Post))
            {

                <div class="box">
                    <div class="box-header">
                        @if (Model.doaction == "edit")
                        {
                            <div class="pull-left">
                                <div style="display: inline-flex">
                                    <span class="badge bg-light-blue" style="font-size:15px;">Cargo Truck Outward Cum Gatepass No : @Model.StuffReferenceNo</span>@CFS.Com.ClsCommon.AddhtmlSpace(3)
                                    <span class="badge bg-light-blue" style="font-size:15px;">User : @Model.User</span> @CFS.Com.ClsCommon.AddhtmlSpace(3)
                                    <span class="badge bg-light-blue" style="font-size:15px;">Outward Date and time : @Model.StuffDateTime</span>
                                </div>
                            </div>
                        }
                        <div class="pull-right">
                            <div style="display: inline-flex">
                                <a href="@Url.Action("Index","trnCargoTruckOutwardCumGatepass", new {pg=Request.Params["pg"], search=Request.Params["search"] })" class="btn btn-primary btn-sm" style="color: #fff" data-toggle="tooltip" title="Back to listing"><i class="fa fa-arrow-left"></i></a>
                            </div>
                        </div>
                    </div>
                    <div class="box-body">
                        <div class="col-md-5">
                            <div class="form-group">
                                @Html.LabelFor(Model => Model.WorkOrderNo)<span class="text-red">*</span>
                                @if (!Model.IsSearch)
                                {
                                    @Html.TextBoxFor(Model => Model.TruckNo, new { @id = "TruckNo", @name = "TruckNo", @class = "form-control", @placeholder = "Truck No. " })
                                }
                                else
                                {
                                    @Html.TextBoxFor(Model => Model.TruckNo, new { @id = "TruckNo", @name = "TruckNo", @class = "form-control", @placeholder = "Truck No. ", @readonly = "true" })

                                }
                                @Html.HiddenFor(Model => Model.trnEmptyTruckGateInID, new { @id = "trnEmptyTruckGateInID", @name = "trnEmptyTruckGateInID" })
                            </div>
                        </div>
                        <div class="col-md-7">
                            <div class="pull-left">
                                <br />
                                @if (!Model.IsSearch)
                                {
                                    <button type="button" onclick="return SearchwithCargoGateIn()" class="btn btn-primary">Search</button>
                                }
                                @if (!IsEdit)
                                {
                                    <a onclick="ClearSearchDetails()" class="btn btn-danger">Clear</a>
                                }
                            </div>
                        </div>
                        @if (Model.IsSearch)
                        {
                            @Html.HiddenFor(Model => Model.pagger.Search)
                            @Html.HiddenFor(Model => Model.doaction)
                            @Html.HiddenFor(Model => Model.IsSearch)
                            @Html.HiddenFor(Model => Model.page)
                            @Html.HiddenFor(Model => Model.filter)
                            <input type="hidden" id="trnCargoTruckOutwardCumGatepassTab" name="trnCargoTruckOutwardCumGatepassTab" value="@Model.trnCargoTruckOutwardCumGatepassTab" />
                            <input type="hidden" id="trnEmptyTruckGateInID" name="trnEmptyTruckGateInID" value="@Model.trnEmptyTruckGateInID" />
                            <input type="hidden" id="TruckNo" name="TruckNo" value="@Model.TruckNo" />
                            @Html.HiddenFor(Model => Model.trnCargoTruckOutwardCumGatepassID, new { id = "trnCargoTruckOutwardCumGatepassID", name = "trnCargoTruckOutwardCumGatepassID" })
                            @Html.HiddenFor(Model => Model.trnEmptyTruckGateInNo, new { id = "trnEmptyTruckGateInNo", name = "trnEmptyTruckGateInNo" })
                            @Html.HiddenFor(Model => Model.WorkOrderIDOnly, new { id = "WorkOrderIDOnly", name = "WorkOrderIDOnly" })
                            @Html.HiddenFor(Model => Model.WorkOrderNoOnly, new { id = "WorkOrderNoOnly", name = "WorkOrderNoOnly" })
                            @Html.HiddenFor(Model => Model.WorkOrderID, new { id = "WorkOrderID", name = "WorkOrderID" })
                            @Html.HiddenFor(Model => Model.WorkOrderNo, new { id = "WorkOrderNo", name = "WorkOrderNo" })
                            @Html.HiddenFor(Model => Model.trnCargoTruckOutwardCumGatepassNo)
                            @Html.HiddenFor(Model => Model.trnCargoTruckOutwardCumGatepassPrifix)
                            @Html.HiddenFor(Model => Model.IsFinished, new { @id = "IsFinished", @name = "IsFinished" })
                            @Html.HiddenFor(Model=>Model.IsBondOrCPExpired)

                            <div class="col-md-12" style="border-bottom:1px solid #cdcdcd;margin-bottom: 5px;"></div>
                            <div class="col-md-4">
                                @Html.LabelFor(Model => Model.CargoType, new { @for = "txtCargoType" }) : <span>@Model.CargoType</span>
                            </div>

                            <div class="col-md-4">
                                @Html.LabelFor(Model => Model.TEMP, new { @for = "txtTemp" }) : <span>@Model.TEMP</span>
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(Model => Model.IMO, new { @for = "txtIMO" }) : <span>@Model.IMO</span>
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(Model => Model.UN, new { @for = "txtUN" }) : <span>@Model.UN</span>
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(Model => Model.HighValueStatus, new { @for = "txtHighValueStatus" }) : <span>@Model.HighValueStatus</span>
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(Model => Model.GateInDate, new { @for = "GateInDate" }) : <span>@Model.GateInDate</span>
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(Model => Model.Transporter, new { @for = "txtTransporter" }) : <span>@Model.Transporter</span>
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(Model => Model.VehicleType, new { @for = "txtVehicleType" }) : <span>@Model.VehicleType</span>
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(Model => Model.WeighmentStatus, new { @for = "txtWeighmentStatus" }) : <span>@Model.WeighmentStatus</span>
                            </div>
                            <div class="col-md-4">
                                <label>Weighment Payment Mode</label> : <span>@ViewBag.WeighmentPaymentMode</span>
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(Model => Model.GrossWeight, new { @for = "txtGrossWeight" }) : @if (!string.IsNullOrEmpty(Model.GrossWeight))
                                {<span>@Convert.ToDecimal(Model.GrossWeight).ToString("0.00")</span>}
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(Model => Model.TruckTareWeight, new { @for = "txtTruckTareWeight" }) : @if (!string.IsNullOrEmpty(Model.GrossWeight))
                                {<span>@Convert.ToDecimal(Model.TruckTareWeight).ToString("0.00")</span>}
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(Model => Model.NetWeight, new { @for = "txtNetWeight" }) : @if (!string.IsNullOrEmpty(Model.GrossWeight))
                                {<span>@Convert.ToDecimal(Model.NetWeight).ToString("0.00")</span>}
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(Model => Model.PlugIndate, new { @for = "PlugIndate" }) : <span>@Model.PlugIndate</span>
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(Model => Model.PlugOffDate, new { @for = "PlugOffDate" }) : <span>@Model.PlugOffDate</span>
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(Model => Model.NoofPackages, new { @for = "txtNoofPackages" }) : <span>@Model.NoofPackages</span>
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(Model => Model.NoofPieces, new { @for = "txtNoofPieces" }) : <span>@Model.NoofPieces</span>
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(Model => Model.Weight, new { @for = "txtWeight" }) : <span>@Model.Weight</span>
                            </div>
                            <div class="col-md-4">
                                @Html.LabelFor(Model => Model.BillCommodity, new { @for = "txtBillCommodity" }) : <span>@Model.BillCommodity</span>
                            </div>
                            <div class="col-md-12" style="border-bottom:1px solid #cdcdcd;margin-bottom: 5px;"></div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    @Html.LabelFor(Model => Model.Surveyor, new { @for = "Surveyor" })<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.SurveyorID, String.Empty, new { @id = "spn_Surveyor", @class = "help-inline text-red" })
                                    @Html.TextBoxFor(Model => Model.Surveyor, new { @id = "Surveyor", @name = "Surveyor", @class = "form-control", @placeholder = "Enter Surveyor" })
                                    @Html.HiddenFor(Model => Model.SurveyorID, new { @id = "SurveyorID", @name = "SurveyorID" })
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    @Html.LabelFor(Model => Model.Contractor, new { @for = "Contractor" })<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.ContractorID, String.Empty, new { @id = "spn_Contractor", @class = "help-inline text-red" })
                                    @Html.TextBoxFor(Model => Model.Contractor, new { @id = "Contractor", @name = "Contractor", @class = "form-control", @placeholder = "Enter Contractor" })
                                    @Html.HiddenFor(Model => Model.ContractorID, new { @id = "ContractorID", @name = "ContractorID" })
                                </div>
                            </div>
                            <div class="col-md-2">
                                @Html.LabelFor(Model => Model.BeginActualStuffDateandTime, new { @for = "BeginActualStuffDateandTime" })<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.BeginActualStuffDateandTime, String.Empty, new { @id = "spn_BeginActualStuffDateandTime", @class = "help-inline text-red" })
                                <div class="input-group">
                                    @Html.TextBoxFor(Model => Model.BeginActualStuffDateandTime, new { @id = "BeginActualStuffDateandTime", @name = "BeginActualStuffDateandTime", @class = "form-control DateTimePicker", @placeholder = "Enter Begin Actual Stuff Date and Time"})
                                    <span class="input-group-addon" onclick="getElementById('BeginActualStuffDateandTime').focus()"><i class="fa fa-calendar"></i></span>
                                </div>
                            </div>
                            <div class="col-md-2">
                                @Html.LabelFor(Model => Model.EndActualStuffDateandTime, new { @for = "EndActualStuffDateandTime" })<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.EndActualStuffDateandTime, String.Empty, new { @id = "spn_EndActualStuffDateandTime", @class = "help-inline text-red" })
                                <div class="input-group">
                                    @Html.TextBoxFor(Model => Model.EndActualStuffDateandTime, new { @id = "EndActualStuffDateandTime", @name = "EndActualStuffDateandTime", @class = "form-control DateTimePicker", @placeholder = "Enter End Actual Stuff Date and Time" })
                                    <span class="input-group-addon" onclick="getElementById('EndActualStuffDateandTime').focus()"><i class="fa fa-calendar"></i></span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(Model => Model.Remarks, new { @for = "Remarks" })
                                    @Html.TextBoxFor(Model => Model.Remarks, new { @id = "Remarks", @name = "Remarks", @class = "form-control", @placeholder = "Enter Remarks" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <br />
                                    @Html.CheckBoxFor(Model => Model.DomesticContainerStatus, new { @id = "DomesticContainerStatus", @name = "DomesticContainerStatus", @class = "form-control" })
                                    @Html.LabelFor(Model => Model.DomesticContainerStatus, new { @for = "DomesticContainerStatus" }) <span class="text-red">*</span>
                                </div>
                            </div>

                        }
                    </div>
                </div>
                if (Model.IsSearch && IsEdit)
                {
                    @Html.HiddenFor(Model => Model.trnContainerDetails.CargoType, new { @id = "hdnCargoType" })

                    <div id="dvDomesticContainer">
                        <div class="box">
                            <div class="box-header with-border">
                                <h4><b>Domestic Container Details </b></h4>
                            </div>
                            <div class="box-body">
                                <div id="dvAddContainerDetails">
                                    @Html.HiddenFor(Model => Model.trnContainerDetails.trnCargoGateInGWContainerDetailsID, new { @id = "trnCargoGateInGWContainerDetailsID", @name = "trnCargoGateInGWContainerDetailsID" })
                                    @Html.HiddenFor(Model => Model.trnCargoTruckOutwardCumGatepassContainerDetailsID, new { @id = "trnCargoTruckOutwardCumGatepassContainerDetailsID", @name = "trnCargoTruckOutwardCumGatepassContainerDetailsID" })
                                    <div class="col-md-2">
                                        <div class="form-group">
                                            @Html.LabelFor(Model => Model.trnContainerDetails.ContainerNumber)<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.trnContainerDetails.ContainerNumber, String.Empty, new { @id = "spn_ContainerNumber", @class = "help-inline text-red" })
                                            @Html.TextBoxFor(Model => Model.trnContainerDetails.ContainerNumber, new { @id = "ContainerNumber", @name = "ContainerNumber", @class = "form-control", @placeholder = "Enter Container Number", @maxlength = "11", @onkeypress = "return AlphaNumber(event)" })
                                            @Html.HiddenFor(Model => Model.trnContainerDetails.trnEmptyTruckGateInDomesticID, new { @id = "hdntrnEmptyTruckGateInDomesticID" })
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <div class="form-group">
                                            @Html.LabelFor(Model => Model.trnContainerDetails.ISOCode)<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.trnContainerDetails.ISOCodeID, String.Empty, new { @id = "spn_ISOCodeID", @class = "help-inline text-red" })
                                            @Html.TextBoxFor(Model => Model.trnContainerDetails.ISOCode, new { @id = "ISOCode", @name = "ISOCode", @class = "form-control", @placeholder = "Enter ISOCode", @maxlength = "5" })
                                            @Html.HiddenFor(Model => Model.trnContainerDetails.ISOCodeID, new { @id = "ISOCodeID", @name = "ISOCodeID" })
                                            @Html.HiddenFor(Model => Model.trnContainerDetails.ISOCodeSize, new { @id = "ISOCodeSize", @name = "ISOCodeSize" })
                                            @Html.HiddenFor(Model => Model.trnContainerDetails.ISOCodeType, new { @id = "ISOCodeType", @name = "ISOCodeType" })
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <div class="form-group">
                                            @Html.LabelFor(Model => Model.trnContainerDetails.ISOCodeDoc)      <span class="form-control-lable" id="ISOCodeDoc"></span>
                                            @Html.HiddenFor(Model => Model.trnContainerDetails.hdnISOCodeDoc, new { @id = @"hdnISOCodeDoc", @name = "hdnISOCodeDoc" })
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <div class="form-group">
                                            @Html.LabelFor(Model => Model.trnContainerDetails.ISOCodeSize)      <span class="form-control-lable" id="ISOCodeSizes"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <div class="form-group">
                                            @Html.LabelFor(Model => Model.trnContainerDetails.ISOCodeType)     <span class="form-control-lable" id="ISOCodeTypes"></span>
                                        </div>
                                    </div>
                                    <div class="col-md-2">
                                        <div class="form-group">
                                            @Html.LabelFor(Model => Model.trnContainerDetails.GrossWeight)<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.trnContainerDetails.GrossWeight, String.Empty, new { @id = "spn_GrossWeight", @class = "help-inline text-red" })
                                            @Html.TextBoxFor(Model => Model.trnContainerDetails.GrossWeight, new { @id = "GrossWeight", @name = "GrossWeight", @onblur = "onblureweight()", @class = "form-control", @placeholder = "Enter Container Number", @maxlength = "5", @onkeypress = "return isNumberWithTwoDecimal(event,'GrossWeight')" })
                                        </div>
                                    </div>
                                    <div class="col-md-2">
                                        <div class="form-group">
                                            @Html.LabelFor(Model => Model.trnContainerDetails.TareWeight)<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.trnContainerDetails.TareWeight, String.Empty, new { @id = "spn_TareWeight", @class = "help-inline text-red" })
                                            @Html.TextBoxFor(Model => Model.trnContainerDetails.TareWeight, new { @id = "TareWeight", @name = "TareWeight", @class = "form-control", @onblur = "onblureweight()", @placeholder = "Enter Tare Weight", @maxlength = "4", @onkeypress = "return isNumberWithTwoDecimal(event,'TareWeight')" })
                                        </div>
                                    </div>
                                    <div class="col-md-2">
                                        <div class="form-group">
                                            @Html.LabelFor(Model => Model.trnContainerDetails.PayloadCapacity)<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.trnContainerDetails.PayloadCapacity, String.Empty, new { @id = "spn_PayloadCapacity", @class = "help-inline text-red" })
                                            @Html.TextBoxFor(Model => Model.trnContainerDetails.PayloadCapacity, new { @id = "PayloadCapacity", @name = "PayloadCapacity", @class = "form-control", @readonly = "true" })
                                        </div>
                                    </div>
                                    <div class="col-md-2 form-group">
                                        @Html.LabelFor(Model => Model.trnContainerDetails.PhysicalSeal, new { @for = "PhysicalSeal" })<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.trnContainerDetails.PhysicalSeal, String.Empty, new { @id = "spn_PhysicalSeal", @class = "help-inline text-red" })
                                        @Html.TextBoxFor(Model => Model.trnContainerDetails.PhysicalSeal, new { @id = "PhysicalSeal", @name = "PhysicalSeal", @class = "form-control" })
                                    </div>
                                    <div class="col-md-2 form-group">
                                        @Html.LabelFor(Model=>Model.trnContainerDetails.DeclaredSeal,new { @for= "DeclaredSeal" })
                                        @Html.TextBoxFor(Model => Model.trnContainerDetails.DeclaredSeal, new { @id= "DeclaredSeal", @name= "DeclaredSeal", @readonly=true,@class="form-control"})
                                    </div>
                                    <div class="col-md-2 pull-right">
                                        <div class="form-group pull-right">
                                            <br />
                                            <button type="button" onclick="return AddContainerdetails()" class="btn btn-primary">Add</button>
                                            <a id="btnClear" onclick="ClearContainerDetails()" class="btn btn-danger">Clear</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <table id="example2" style="white-space: nowrap" class="table table-bordered table-hover">
                                        <thead>
                                            <tr>
                                                <th>Cont No</th>
                                                <th>ISO Code</th>
                                                <th>Size</th>
                                                <th>Cont Type</th>
                                                <th>Gross Weight</th>
                                                <th>Tare Weight</th>
                                                <th>Payload Capacity</th>
                                                <th>Physical Seal</th>
                                                <th>Declared Seal</th>
                                                <th>Action</th>
                                            </tr>
                                        </thead>
                                        <tbody id="ContainerDetails"></tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                if (Model.IsSearch)
                {
                    <div class="box">
                        <div class="box-header">
                            <h4><span>NOC Details</span></h4>
                        </div>
                        <div class="box-body">
                            <div class="col-md-12" style="overflow-x:scroll;">
                                <table id="example2" class="table-bordered table-hover" style="width:400%">
                                    <thead>
                                        <tr>
                                            <th>NOC No.</th>
                                            <th>NOC Date</th>
                                            <th>In-BOE No.</th>
                                            <th>In-BOE Date</th>
                                            <th>EX-BOE No.</th>
                                            <th>EX-BOE Date</th>
                                            <th>IGM No.</th>
                                            <th>IGM Date</th>
                                            <th>Item No.</th>
                                            <th>Bulk</th>
                                            <th>Doc. Dec. Pkgs</th>
                                            <th>Doc. Dec. Pieces</th>
                                            <th>Doc. Dec. Weight</th>
                                            <th>Ex-Bond Doc. Rec. Pkgs</th>
                                            <th>Ex-Bond Doc. Rec. Pieces</th>
                                            <th>Ex-Bond Doc. Rec. Weight</th>
                                            <th>Short/Excess Packages</th>
                                            <th>Short/Excess Pieces</th>
                                            <th>Short/Excess Weight</th>
                                            <th>Total Outward Packages</th>
                                            <th>Total Outward Pieces</th>
                                            <th>Total Outward Weight</th>
                                            <th>Total Balance Packages</th>
                                            <th>Total Balance Pieces</th>
                                            <th>Total Balance Weight</th>
                                            <th>Truck cargo Packages</th>
                                            <th>Truck cargo Pieces</th>
                                            <th>Truck cargo weight</th>
                                            <th>Outward Details</th>
                                            <th>Billing Party</th>
                                            <th>Importer</th>
                                            <th> CHA</th>
                                            <th>Forwarder</th>
                                            <th>Cargo Desc.</th>
                                            <th>Sub Commodity</th>
                                            <th>Pkge Type</th>
                                            <th>Cycle</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model.dtDocDetails != null)
                                        {
                                            for (int i = 0; i < Model.dtDocDetails.Rows.Count; i++)
                                            {
                                                <tr>
                                                    <td>@Convert.ToString(Model.dtDocDetails.Rows[i]["DocumentNo"])</td>
                                                    <td>@Convert.ToString(Model.dtDocDetails.Rows[i]["DocDate"])</td>
                                                    <td>@Convert.ToString(Model.dtDocDetails.Rows[i]["InBOE"])</td>
                                                    <td>@Model.dtDocDetails.Rows[i]["InBOEDate"]</td>
                                                    <td>@Convert.ToString(Model.dtDocDetails.Rows[i]["EXBOE"])</td>
                                                    <td>@Model.dtDocDetails.Rows[i]["EXBOEDate"]</td>
                                                    <td>@Convert.ToString(Model.dtDocDetails.Rows[i]["IGMNo"])</td>
                                                    <td>@Model.dtDocDetails.Rows[i]["IGMDate"]</td>
                                                    <td>@Convert.ToString(Model.dtDocDetails.Rows[i]["ItemNo"])</td>
                                                    <td>@Convert.ToString(Model.dtDocDetails.Rows[i]["BULKSTATUS"])</td>
                                                    <td>@Convert.ToInt32(Model.dtDocDetails.Rows[i]["DocumentPackages"])</td>
                                                    <td>@Convert.ToInt32(Model.dtDocDetails.Rows[i]["DocumentPices"])</td>
                                                    <td>@Convert.ToString(Model.dtDocDetails.Rows[i]["DocumentWeight"])</td>

                                                    <td>@(Convert.ToDecimal(Model.dtDocDetails.Rows[i]["EXBondPkg"]).ToString("0"))</td>
                                                    <td>@(Convert.ToDecimal(Model.dtDocDetails.Rows[i]["EXBondpcs"]).ToString("0"))</td>
                                                    <td>@Model.dtDocDetails.Rows[i]["EXBondwgt"]</td>
                                                    <td>@( Convert.ToInt32(Model.dtDocDetails.Rows[i]["DocumentPackages"]) - Convert.ToInt32(Model.dtDocDetails.Rows[i]["EXBondPkg"]))</td>
                                                    <td>@(Convert.ToInt32(Model.dtDocDetails.Rows[i]["DocumentPices"]) - Convert.ToInt32(Model.dtDocDetails.Rows[i]["EXBondpcs"]))</td>
                                                    <td>@(Convert.ToDecimal(Model.dtDocDetails.Rows[i]["DocumentWeight"]) - Convert.ToDecimal(Model.dtDocDetails.Rows[i]["EXBondwgt"]))</td>

                                                    <td>@Convert.ToInt32(Model.dtDocDetails.Rows[i]["TotalOutwardPkg"])</td>
                                                    <td>@Convert.ToInt32(Model.dtDocDetails.Rows[i]["TotalOutwardpcs"])</td>
                                                    <td>@Convert.ToString(Model.dtDocDetails.Rows[i]["TotalOutwardwgt"])</td>

                                                    <td>@(Convert.ToInt32(Model.dtDocDetails.Rows[i]["EXBondPkg"]) - Convert.ToInt32(Model.dtDocDetails.Rows[i]["TotalOutwardPkg"]))</td>
                                                    <td>@(Convert.ToInt32(Model.dtDocDetails.Rows[i]["EXBondpcs"]) - Convert.ToInt32(Model.dtDocDetails.Rows[i]["TotalOutwardpcs"]))</td>
                                                    <td>@(Convert.ToDecimal(Model.dtDocDetails.Rows[i]["EXBondwgt"]) - Convert.ToDecimal(Model.dtDocDetails.Rows[i]["TotalOutwardwgt"]))</td>

                                                    <td>@Convert.ToInt32(Model.dtDocDetails.Rows[i]["OutwardPkg"])</td>
                                                    <td>@Convert.ToInt32(Model.dtDocDetails.Rows[i]["Outwardpcs"])</td>
                                                    <td>@Convert.ToString(Model.dtDocDetails.Rows[i]["Outwardwgt"])</td>
                                                    <td>
                                                        @*<button type="button" data-toggle="modal" style=" cursor: pointer;" onclick="addtrnDocumentGWLotDetailsID('@Model.dtDocDetails.Rows[i][" trnDocumentGWLotDetailsID"]')" data-target="#AddTruckStuffDetails" class="btn btn-primary"><i class="fa fa-plus"></i></button>*@
                                                        @if (Model.trnCargoTruckOutwardCumGatepassID > 0)
                                                        {
                                                            <a style=" cursor: pointer;" href="@Url.Action("Index","trnBOEItemsOut",
                                           new { @id=Model.dtDocDetails.Rows[i]["trnDocumentLotDetailsID"],
                                               @trnCargoTruckOutwardCumGatepassID=Model.trnCargoTruckOutwardCumGatepassID,
                                               @TruckNo=Model.TruckNo,
                                               @BOENo=Convert.ToString(Model.dtDocDetails.Rows[i]["InBOE"]),
                                               @GatePassNOOFPKGS=Convert.ToString(Model.dtDocDetails.Rows[i]["WorkOrderPackages"]),
                                               @GatePassNOOFPIECES=Convert.ToString(Model.dtDocDetails.Rows[i]["WorkOrderPieces"]),
                                               @GatePassWEIGHT=Convert.ToString(Model.dtDocDetails.Rows[i]["WorkOrderWeight"]),
                                               @type='T' ,
                                               @SearchID=ViewBag.searchID,
                                               @SearchNO=ViewBag.searchNo
                                           ,@doaction=Model.doaction,
                                               @trnExBondDocumentEntryDetailsID=Convert.ToString(Model.dtDocDetails.Rows[i]["trnExBondDocumentEntryDetailsID"])
                                           ,@IsBulk=@Convert.ToString(Model.dtDocDetails.Rows[i]["BULKSTATUS"])})" target="_blank" class="btn btn-primary"><i class="fa fa-plus"></i></a>
                                                        }
                                                    </td>
                                                    <td>@Convert.ToString(Model.dtDocDetails.Rows[i]["BillToCustomerName"])</td>
                                                    <td>@Convert.ToString(Model.dtDocDetails.Rows[i]["ImporterName"])</td>
                                                    <td>@Convert.ToString(Model.dtDocDetails.Rows[i]["SubCHA"])</td>
                                                    <td>@Convert.ToString(Model.dtDocDetails.Rows[i]["Forwarder"])</td>
                                                    <td>@Convert.ToString(Model.dtDocDetails.Rows[i]["CARGODESC"])</td>
                                                    <td>@Convert.ToString(Model.dtDocDetails.Rows[i]["SUBCOMMODITY"])</td>
                                                    <td>@Convert.ToString(Model.dtDocDetails.Rows[i]["PACKAGETYPE"])</td>
                                                    <td>@Convert.ToString(Model.dtDocDetails.Rows[i]["Cycle"])</td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                            <div class="col-md-12 box-footer" style="margin-top:13px;">
                                <div class="pull-right">
                                    @if (Model.trnCargoTruckOutwardCumGatepassID == 0)
                                    {
                                        <button type="submit" onclick="return ValidateForm(1)" class="btn btn-primary">Continue</button>
                                    }
                                    else
                                    {
                                        <button type="submit" onclick="return Finishedcompletethis(1)" class="btn btn-primary">Save</button>
                                    }
                                    <a href="@Url.Action("Index","trnCargoTruckOutwardCumGatepass", new {pg=Request.Params["pg"], search=Request.Params["search"] })" class="btn btn-danger">Cancel</a>
                                </div>
                            </div>
                        </div>
                    </div>
                }

            }
        </div>
    </div>

</section>
<script>
    var doaction = '@Model.doaction';
    var IsView = false;

    function Finishedcompletethis(num) {
        if (confirm(" Are you sure you want to make it save as stuff completed?")) {
            $("#IsFinished").val(true);
            return ValidateForm(num);
        }
        else {
            return false;
        }
    }
</script>
<script src="@CFS.Com.ClsCommon.GetCacheVersion("FormJs/trnCargoTruckOutwardCumGatepass.js")"></script>

