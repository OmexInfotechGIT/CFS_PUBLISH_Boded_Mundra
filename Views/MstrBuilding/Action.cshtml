@model CFS.Models.MstrBuilding
@{
    ViewBag.gblBlnView = CFS.Com.ClsCommon.getaccesspage(CFS.Com.ClsCommon.Controller(), CFS.Com.ClsCommon.AccessType.View);
    ViewBag.gblBlnEdit = CFS.Com.ClsCommon.getaccesspage(CFS.Com.ClsCommon.Controller(), CFS.Com.ClsCommon.AccessType.Edit);
    ViewBag.gblBlnAdd = CFS.Com.ClsCommon.getaccesspage(CFS.Com.ClsCommon.Controller(), CFS.Com.ClsCommon.AccessType.Add);
    ViewBag.gblBlnDelete = CFS.Com.ClsCommon.getaccesspage(CFS.Com.ClsCommon.Controller(), CFS.Com.ClsCommon.AccessType.Delete);
    if (Model.doaction == "edit")
    {
        ViewBag.Title = "Update Building";
        if (!ViewBag.gblBlnEdit)
        {
            Response.Redirect(CFS.Com.ClsCommon.GetRootPath() + "Error/unauthorize/");
        }
    }
    else
    {
        ViewBag.Title = "Add New Building";
        if (!ViewBag.gblBlnAdd)
        {
            Response.Redirect(CFS.Com.ClsCommon.GetRootPath() + "Error/unauthorize/");
        }
    }
}


<section class="content">
    <div class="row">
        <div class="col-xs-12">
            <div class="box">
                <div class="box-header">
                    <div class="pull-right">
                        <div style="display: inline-flex">
                            @*<a href="@CFS.Com.ClsCommon.GetUrlReferrer("MstrBuilding","Index")" class="btn btn-primary btn-sm" style="color: #fff" data-toggle="tooltip" title="Back to listing"><i class="fa fa-arrow-left"></i></a>*@
                            <a href="@Url.Action("Index","MstrBuilding", new {pg = Request.Params["pg"], search = Request.Params["search"] })" class="btn btn-primary btn-sm" style="color: #fff" data-toggle="tooltip" title="Back to listing"><i class="fa fa-arrow-left"></i></a>
                        </div>
                    </div>
                    <br />
                </div>
                <div class="box-body">
                    @using (Html.BeginForm("Action", "MstrBuilding", FormMethod.Post))
                    {
                        @Html.HiddenFor(Model => Model.pagger.Search)
                        @Html.HiddenFor(Model => Model.MstrBuildingID)
                        @Html.HiddenFor(Model => Model.doaction)
                        @Html.HiddenFor(Model => Model.page)
                        @Html.HiddenFor(Model => Model.filter)

                        <div class="col-md-6">
                            <div class="box-body">
                                <div class="form-group">
                                    @Html.LabelFor(Model => Model.MstrBuildingCode, new { @for = "txtMstrBuildingCode" })<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.MstrBuildingCode, String.Empty, new { @class = "help-inline text-red" })
                                    @Html.TextBoxFor(Model => Model.MstrBuildingCode, new { @id = "txtMstrBuildingCode", @name = "txtMstrBuildingCode", @class = "form-control", @placeholder = "Enter Building Code" ,@maxlength= "3", @onkeypress = "return alphaOnly(event)" })
                                    @Html.HiddenFor(Model => Model.CodeRefID, new { @id= "CodeRefID"})
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(Model => Model.MstrBuildingName, new { @for = "txtMstrBuildingName" })<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.MstrBuildingName, String.Empty, new { @class = "help-inline text-red" })
                                    @Html.TextBoxFor(Model => Model.MstrBuildingName, new { @id = "txtMstrBuildingName", @name = "txtMstrBuildingName", @class = "form-control", @placeholder = "Enter Building Name" })
                                    @Html.HiddenFor(Model => Model.RefID, new { @id = "RefID" })
                                </div> 
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="box-body">
                                <div class="form-group">
                                    <br />
                                    @Html.CheckBoxFor(Model => Model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.Label("IsActive") @Html.ValidationMessageFor(Model => Model.IsActive, String.Empty, new { @class = "help-inline text-red" })
                                   
                                </div> 
                                <div class="form-group" id="dvInActiveReason">

                                    @Html.LabelFor(Model => Model.InActiveReason, new { @for = "InActiveReason" }) @Html.ValidationMessageFor(Model => Model.InActiveReason, String.Empty, new { @class = "help-inline text-red" })
                                    @Html.TextBoxFor(Model => Model.InActiveReason, new { @class = "form-control", @placeholder = "Enter Inactivate Reason" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="box-footer">
                                <button type="submit" class="btn btn-primary">Submit</button>
                                @*<a href="@CFS.Com.ClsCommon.GetUrlReferrer("MstrBuilding","Index")" class="btn btn-danger">Cancel</a>*@
                                <a href="@Url.Action("Index", "MstrBuilding", new {pg = Request.Params["pg"], search = Request.Params["search"] })" class="btn btn-danger">Cancel</a>
                            </div>
                        </div>
                     }
                </div>
            </div>
        </div>
    </div>
</section>
<script>
    doaction = '@Model.doaction';
</script>
<script src="@CFS.Com.ClsCommon.GetCacheVersion("FormJs/MstrBuilding.js")"></script>


