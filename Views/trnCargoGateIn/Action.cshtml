@model CFS.Models.trnCargoGateIn
@{
    ViewBag.gblBlnView = CFS.Com.ClsCommon.getaccesspage(CFS.Com.ClsCommon.Controller(), CFS.Com.ClsCommon.AccessType.View);
    ViewBag.gblBlnEdit = CFS.Com.ClsCommon.getaccesspage(CFS.Com.ClsCommon.Controller(), CFS.Com.ClsCommon.AccessType.Edit);
    ViewBag.gblBlnAdd = CFS.Com.ClsCommon.getaccesspage(CFS.Com.ClsCommon.Controller(), CFS.Com.ClsCommon.AccessType.Add);
    ViewBag.gblBlnDelete = CFS.Com.ClsCommon.getaccesspage(CFS.Com.ClsCommon.Controller(), CFS.Com.ClsCommon.AccessType.Delete);
    bool IsEdit = false;
    if (Model.doaction == "edit")
    {
        IsEdit = true;
        ViewBag.Title = "Update Truck Gate In";
        if (!ViewBag.gblBlnEdit && !ViewBag.gblBlnAdd)
        {
            Response.Redirect(CFS.Com.ClsCommon.GetRootPath() + "Error/unauthorize/");
        }
    }
    else
    {
        ViewBag.Title = "Add Truck Gate In";
        if (!ViewBag.gblBlnAdd)
        {
            Response.Redirect(CFS.Com.ClsCommon.GetRootPath() + "Error/unauthorize/");
        }
    }
}
<style>
    table th, table td {
        padding: 10px;
    }
</style>
@using (Html.BeginForm("Action", "trnCargoGateIn", FormMethod.Post, new { @id = "frmpost", @name = "frmpost" }))
{
<section class="content">
    <div class="row">
        <div class="box">
            <div class="box-header">
                @if (Model != null && Model.doaction == "edit")
                {
                    <div class="pull-left">
                        <div style="display: inline-flex">                            
                            <h4>
                                <b>
                                    <span class="badge bg-light-blue" style="font-size:15px;"> Cargo Gate In No: @Model.trnCargoGateInPrefix@Model.trnCargoGateInNo</span>
                                    <span class="badge bg-light-blue" style="font-size:15px;"> Datetime : @Model.CreatedDate</span>
                                    <span class="badge bg-light-blue" style="font-size:15px;"> User : @Model.User</span>
                                </b>
                            </h4>
                        </div>
                    </div>
                }
                <div class="pull-right" id="divBack">
                    <div style="display: inline-flex">
                        <a id="btnBack" href="@Url.Action("Index","trnCargoGateIn", new {pg = Request.Params["pg"], search = Request.Params["search"] })" class="btn btn-primary btn-sm" style="color: #fff" data-toggle="tooltip" title="Back to listing"><i class="fa fa-arrow-left"></i></a>
                    </div>
                </div>
                <br />
            </div>
            <div class="box-body">
                <div class="col-md-12">
                    <div class="box-body" id="divHeaderDetails">
                        <div class="col-md-5">
                            <div class="form-group">
                                @Html.LabelFor(Model => Model.WorkOrderNo)<span class="text-red">*</span>
                                @Html.TextBoxFor(Model => Model.WorkOrderNo, new { @id = "WorkOrderNo", @name = "WorkOrderNo", @class = "form-control", @placeholder = "SELECT Work Order No. / Truck No. / Transporter Name" })
                                @Html.HiddenFor(Model => Model.WorkOrdersearchID, new { @id = "WorkOrdersearchID", @name = "WorkOrdersearchID" })
                            </div>
                        </div>


                        @if (!IsEdit)
                        {
                            <div class="col-md-2">
                                <div class="form-group">
                                    <br />
                                    @if (!Model.IsSearch)
                                    {
                                        <button type="button" class="btn btn-primary" onclick="SearchwithWorkOrderNo()" id="btnHeaderSearch">Search</button>
                                    }
                                    <a href="@Url.Action("index", "trnCargoGateIn")" class="btn btn-danger" id="btnHeaderClear">Clear</a>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                @if (Model.IsSearch)
                {
                <div id="divDetails">
                    @Html.HiddenFor(Model => Model.pagger.Search)
                    @Html.HiddenFor(Model => Model.doaction)
                    @Html.HiddenFor(Model => Model.page)
                    @Html.HiddenFor(Model => Model.filter)
                    @Html.HiddenFor(Model => Model.IsSearch)
                    @Html.HiddenFor(Model => Model.IsFinished, new { id = "IsFinished", name = "IsFinished" })
                    @Html.HiddenFor(Model => Model.trnCargoGateInPrefix, new { id = "trnCargoGateInPrefix", name = "trnCargoGateInPrefix" })
                    @Html.HiddenFor(Model => Model.trnCargoGateInNo, new { id = "trnCargoGateInNo", name = "trnCargoGateInNo" })
                    <input type="hidden" id="trnCargoGateInID" name="trnCargoGateInID" value="@Model.trnCargoGateInID" />
                    <input type="hidden" id="WorkOrderIDOnly" name="WorkOrderIDOnly" value="@Model.WorkOrderIDOnly" />
                    <input type="hidden" id="WorkOrderNoOnly" name="WorkOrderNoOnly" value="@Model.WorkOrderNoOnly" />

                    <div class="col-md-12" style="border-bottom:1px solid #cdcdcd;margin-bottom: 5px;"></div>

                    <div class="col-md-3">
                        @Html.LabelFor(Model => Model.CycleName) : <span>@Model.CycleName</span>
                    </div>
                    <div class="col-md-2">
                        @Html.LabelFor(Model => Model.CargoGateInDate) : <span>@Model.CargoGateInDate</span>
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(Model => Model.ActualGateInDate) : <span>@Model.ActualGateInDate</span>
                    </div>
                    <div class="col-md-2">
                        @Html.LabelFor(Model => Model.User) : <span>@Model.User</span>
                    </div>
                    <div class="col-md-2">
                        @Html.LabelFor(Model => Model.TransportationType) : <span>@Model.TransportationType</span>
                        @Html.HiddenFor(Model => Model.hdnTransportationType, new { @id = "hdnTransportationType" })
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(Model => Model.TruckNo) : <span>@Model.TruckNo</span>
                    </div>
                    <div class="col-md-2">
                        @Html.LabelFor(Model => Model.Transporter) : <span>@Model.Transporter</span>
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(Model => Model.VehicleType) : <span>@Model.VehicleType</span>
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(Model => Model.WeighmentInvoiceNo) : <span>@Model.WeighmentInvoiceNo</span>
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(Model => Model.WeighmentReceiptNo) : <span>@Model.WeighmentReceiptNo</span>
                    </div>
                    <div class="col-md-2">
                        @Html.LabelFor(Model => Model.GrossWeight) : @if (!string.IsNullOrEmpty(Model.GrossWeight))
                        {<span>@Convert.ToDecimal(Model.GrossWeight).ToString("0.00")</span>}
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(Model => Model.TruckTareWeight) : @if (!string.IsNullOrEmpty(Model.TruckTareWeight))
                        {<span>@Convert.ToDecimal(Model.TruckTareWeight).ToString("0.00")</span>}
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(Model => Model.ContainerTareWeight) : @if (!string.IsNullOrEmpty(Model.ContainerTareWeight))
                        {<span>@Convert.ToDecimal(Model.ContainerTareWeight).ToString("0.00")</span>}
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(Model => Model.NetWt) : @if (!string.IsNullOrEmpty(Model.NetWt))
                        {<span>@Convert.ToDecimal(Model.NetWt).ToString("0.00")</span>}
                    </div>
                    <div class="col-md-12" style="border-bottom:1px solid #cdcdcd;margin-bottom: 5px;"></div>


                    <div class="col-md-2">
                        <div class="form-group">
                            @Html.LabelFor(Model => Model.LicenceNo, new { @for = "LicenceNo" }) <span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.LicenceNo, String.Empty, new { @id = "spn_LicenceNo", @class = "help-inline text-red" })
                            @Html.TextBoxFor(Model => Model.LicenceNo, new { @id = "LicenceNo", @name = "LicenceNo", @class = "form-control", @placeholder = "Enter Licence No" })
                            @Html.HiddenFor(Model => Model.LicenceNoID, new { @id = "LicenceNoID", @name = "LicenceNoID", @class = "form-control" })
                        </div>
                    </div>
                    @Html.HiddenFor(Model => Model.VehicleType, new { @id = "VehicleType", @name = "VehicleType" })
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(Model => Model.Driver, new { @for = "Driver" }) <span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.DriverID, String.Empty, new { @id = "spn_Driver", @class = "help-inline text-red" })
                            @Html.TextBoxFor(Model => Model.Driver, new { @id = "Driver", @name = "Driver", @class = "form-control", @placeholder = "Select Driver" })
                            @Html.HiddenFor(Model => Model.DriverID, new { @id = "DriverID", @name = "DriverID" })
                            @Html.HiddenFor(Model => Model.TruckNo, new { @id = "TruckNo", @name = "TruckNo" })
                            @Html.HiddenFor(Model => Model.TransporterID, new { @id = "TransporterID", @name = "TransporterID" })
                            @Html.HiddenFor(Model => Model.Transporter, new { @id = "Transporter", @name = "Transporter" })
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            @Html.LabelFor(Model => Model.MobileNo, new { @for = "MobileNo" }) <span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.MobileNo, String.Empty, new { @id = "spn_MobileNo", @class = "help-inline text-red" })
                            @Html.TextBoxFor(Model => Model.MobileNo, new { @id = "MobileNo", @name = "MobileNo", @class = "form-control", @placeholder = "Enter Mobile No", @onkeypress = "return isonlynumber(event)", @maxlength = "10" })
                        </div>
                    </div>
                    <div class="col-md-5">
                        <div class="form-group">
                            @Html.LabelFor(Model => Model.Address, new { @for = "Address" }) <span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.Address, String.Empty, new { @id = "spn_Address", @class = "help-inline text-red" })
                            @Html.TextBoxFor(Model => Model.Address, new { @id = "Address", @name = "Address", @class = "form-control", @placeholder = "Enter Address No" })
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.LabelFor(Model => Model.FromLocation, new { @for = "FromLocation" }) <span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.FromLocation, String.Empty, new { @id = "spn_FromLocation", @class = "help-inline text-red" })
                            @Html.TextBoxFor(Model => Model.FromLocation, new { @id = "FromLocation", @name = "FromLocation", @class = "form-control", @placeholder = "Enter From Location" })
                            @Html.HiddenFor(Model => Model.FromLocationID, new { @id = "FromLocationID", @name = "FromLocationID" })
                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="form-group">
                            <br />
                            @Html.CheckBoxFor(Model => Model.DomesticContainerStatus, new { @id = "DomesticContainerStatus", @name = "DomesticContainerStatus", @class = "form-control" })
                            @Html.LabelFor(Model => Model.DomesticContainerStatus, new { @for = "DomesticContainerStatus" }) <span class="text-red">*</span>
                        </div>
                    </div>

                    <div class="col-md-2 pull-right">
                        <div class="form-group">
                            <br />
                            @if (!IsEdit)
                            {
                                <button type="submit" class="btn btn-primary" id="SaveDoc" onclick="return CargoGateInValidation(0)">Continue</button>
                                <a id="btnDetailsClear" href="@Url.Action("index", "trnCargoGateIn", new {pg = Request.Params["pg"], search = Request.Params["search"] })" class="btn btn-danger">Cancel</a>
                            }
                            else if (IsEdit)
                            {
                                <div id="dvSaveButton">
                                    <button type="submit" class="btn btn-primary" id="SaveDoc" onclick="return CargoGateInValidation(1);" name="submit" value="Submit">Save</button>
                                    <a id="btnDetailsClear" href="@Url.Action("Index", "trnCargoGateIn", new {pg = Request.Params["pg"], search = Request.Params["search"] })" class="btn btn-danger">Cancel</a>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                }

            </div>
        </div>
    </div>
    @if (Model.IsSearch && IsEdit)
    {
        <div id="dvDomesticContainer" class="row">
            <div class="box">
                <div class="box-header with-border">
                    <h4><b>Domestic Container Details </b></h4>
                </div>
                <div class="box-body">
                    <div id="dvAddContainerDetails">
                        @Html.HiddenFor(Model => Model.trnContainerDetails.trnCargoGateInContainerDetailsID, new { @id = "trnCargoGateInContainerDetailsID", @name = "trnCargoGateInContainerDetailsID" })
                        <div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(Model => Model.trnContainerDetails.ContainerNumber)<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.trnContainerDetails.ContainerNumber, String.Empty, new { @id = "spn_ContainerNumber", @class = "help-inline text-red" })
                                @Html.TextBoxFor(Model => Model.trnContainerDetails.ContainerNumber, new { @id = "ContainerNumber", @name = "ContainerNumber", @class = "form-control", @placeholder = "Enter Container Number", @maxlength = "11", @onkeypress = "return AlphaNumber(event)" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(Model => Model.trnContainerDetails.ISOCode)<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.trnContainerDetails.ISOCodeID, String.Empty, new { @id = "spn_ISOCodeID", @class = "help-inline text-red" })
                                @Html.TextBoxFor(Model => Model.trnContainerDetails.ISOCode, new { @id = "ISOCode", @name = "ISOCode", @class = "form-control", @placeholder = "Enter ISOCode", @maxlength = "5" })
                                @Html.HiddenFor(Model => Model.trnContainerDetails.ISOCodeID, new { @id = "ISOCodeID", @name = "ISOCodeID" })
                                @Html.HiddenFor(Model => Model.trnContainerDetails.ISOCodeSize, new { @id = "ISOCodeSize", @name = "ISOCodeSize" })
                                @Html.HiddenFor(Model => Model.trnContainerDetails.ISOCodeType, new { @id = "ISOCodeType", @name = "ISOCodeType" })
                            </div>
                        </div>
                        <div class="col-md-1">
                            <div class="form-group">
                                @Html.LabelFor(Model => Model.trnContainerDetails.ISOCodeSize)      <span class="form-control-lable" id="ISOCodeSizes"></span>
                            </div>
                        </div>
                        <div class="col-md-1">
                            <div class="form-group">
                                @Html.LabelFor(Model => Model.trnContainerDetails.ISOCodeType)     <span class="form-control-lable" id="ISOCodeTypes"></span>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(Model => Model.trnContainerDetails.GrossWeight)<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.trnContainerDetails.GrossWeight, String.Empty, new { @id = "spn_GrossWeight", @class = "help-inline text-red" })
                                @Html.TextBoxFor(Model => Model.trnContainerDetails.GrossWeight, new { @id = "GrossWeight", @name = "GrossWeight", @onblur = "onblureweight()", @class = "form-control", @placeholder = "Enter Container Number", @maxlength = "5", @onkeypress = "return isNumberWithTwoDecimal(event,'GrossWeight')" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(Model => Model.trnContainerDetails.TareWeight)<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.trnContainerDetails.TareWeight, String.Empty, new { @id = "spn_TareWeight", @class = "help-inline text-red" })
                                @Html.TextBoxFor(Model => Model.trnContainerDetails.TareWeight, new { @id = "TareWeight", @name = "TareWeight", @class = "form-control", @onblur = "onblureweight()", @placeholder = "Enter Tare Weight", @maxlength = "4", @onkeypress = "return isNumberWithTwoDecimal(event,'TareWeight')" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                @Html.LabelFor(Model => Model.trnContainerDetails.PayloadCapacity)<span class="text-red">*</span> @Html.ValidationMessageFor(Model => Model.trnContainerDetails.PayloadCapacity, String.Empty, new { @id = "spn_PayloadCapacity", @class = "help-inline text-red" })
                                @Html.TextBoxFor(Model => Model.trnContainerDetails.PayloadCapacity, new { @id = "PayloadCapacity", @name = "PayloadCapacity", @class = "form-control", @readonly = "true" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(Model => Model.trnContainerDetails.PhysicalSeal, new { @for = "PhysicalSeal" })
                                @Html.TextBoxFor(Model => Model.trnContainerDetails.PhysicalSeal, new { @id = "PhysicalSeal", @name = "PhysicalSeal", @class = "form-control", @placeholder = "Enter Physical Seal" })
                                @Html.HiddenFor(Model => Model.trnContainerDetails.PhysicalSeal, new { @id = "PhysicalSeal", @name = "PhysicalSeal" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(Model => Model.trnContainerDetails.DeclaredSeal, new { @for = "DeclaredSeal" })
                                @Html.TextBoxFor(Model => Model.trnContainerDetails.DeclaredSeal, new { @id = "DeclaredSeal", @name = "DeclaredSeal", @class = "form-control", @placeholder = "Enter Declared Seal" })
                                @Html.HiddenFor(Model => Model.trnContainerDetails.DeclaredSeal, new { @id = "DeclaredSeal", @name = "DeclaredSeal" })
                            </div>
                        </div>
                        <div class="col-md-2 pull-right">
                            <div class="form-group pull-right">
                                <br />
                                <button type="button" onclick="return AddContainerdetails()" class="btn btn-primary" id="btnAddCont">Add</button>                                
                                <button id="btnContClear" type="button" onclick="ClearContainerDetails()" class="btn btn-danger">Clear</button>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <table id="example2" style="white-space: nowrap" class="table-bordered table-hover tblFontSize tblBorderBottom">
                            <thead>
                                <tr>
                                    <th>Cont No</th>
                                    <th>ISO Code</th>
                                    <th>Size</th>
                                    <th>Cont Type</th>
                                    <th>Gross Weight</th>
                                    <th>Tare Weight</th>
                                    <th>Payload Capacity</th>
                                    <th>Physical Seal</th>
                                    <th>Declared Seal</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody id="ContainerDetails">
                              
                            </tbody>
                        </table>
                        <div class="col-md-12" id="divFinalSave">
                            <div class="form-group pull-right" style="margin-bottom:20px!important;">
                                <br />
                                <button type="submit" class="btn btn-primary" id="btnFinalSave" onclick="return CargoGateInValidation(1);" name="submit" value="Submit">Save</button>
                                <a href="@Url.Action("Index", "trnCargoGateIn")" class="btn btn-danger" id="btnFinalClear">Cancel</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    
       
        @if (Model.IsSearch)
        {
            @Html.Partial("_DOCDetailsCard");
        }
    </section>
}
<script>
    var VCNDeatails = '@Model.HtmlVCNDeatails';
    var IsSearch = '@Model.IsSearch.ToString().ToLower()';
    var Type = '@Model.Type.ToString().ToLower()';
    var IsView = "False";
    function changestepValue(tabNo) {
        $("#DocumentTab").val(tabNo);
        if (tabNo != "1") {
            if (tabNo == "5") {
                $("#IsChangeStep").val(2);
            }
        }
        //$("frmpost").submit();
    }
</script>
@if (((Model != null && Model.doaction.ToLower() == "edit") || Model.trnCargoGateInID > 0))
{
    <script>
        $(".isDisplayOnlyinEdit").show();
    </script>
}
else
{
    <script>
        $(".isDisplayOnlyinEdit").hide();
    </script>
}

<script src="@CFS.Com.ClsCommon.GetCacheVersion("FormJs/trnCargoGateIn.js")"></script>



